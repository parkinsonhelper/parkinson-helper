import SwiftUI

struct MedicationProfileView: View {
    @EnvironmentObject var scheduleManager: ScheduleManager

    var body: some View {
        NavigationView {
            Group {
                // Check if the profile has been generated by the ScheduleManager.
                if let profile = scheduleManager.profile {
                    ScrollView {
                        VStack(alignment: .leading, spacing: 20) {
                            Text(NSLocalizedString("PROFILE_SCHEDULE_TITLE", comment: ""))
                                .font(.largeTitle)
                                .fontWeight(.bold)
                                .padding(.horizontal)

                            // Profile Details Section
                            VStack(alignment: .leading, spacing: 10) {
                                HStack {
                                    Text(NSLocalizedString("PROFILE_MEDICATION_PROFILE_TITLE", comment: ""))
                                        .font(.headline)
                                    Spacer()
                                    Text(NSLocalizedString(profile.nameKey, comment: ""))
                                        .font(.subheadline)
                                        .foregroundColor(.gray)
                                }
                                Divider()
                                HStack {
                                    Text(NSLocalizedString("PROFILE_MEDICATION_TYPE_LABEL", comment: ""))
                                        .font(.headline)
                                    Spacer()
                                    Text("Madopar") // This could be dynamic in the future
                                        .font(.subheadline)
                                        .foregroundColor(.gray)
                                }
                                Divider()
                                HStack {
                                    Text(NSLocalizedString("PROFILE_START_DATE_LABEL", comment: ""))
                                        .font(.headline)
                                    Spacer()
                                    Text(profile.phases.first?.startDate ?? Date(), style: .date)
                                        .font(.subheadline)
                                        .foregroundColor(.gray)
                                }
                            }
                            .padding()
                            .background(Color(.systemGray6))
                            .cornerRadius(15)
                            .padding(.horizontal)

                            // Phases Section
                            ForEach(profile.phases) { phase in
                                VStack(alignment: .leading) {
                                    Text(phase.name)
                                        .font(.title2)
                                        .fontWeight(.bold)
                                        .padding([.horizontal, .top])

                                    ForEach(phase.events) { event in
                                        HStack {
                                            VStack {
                                                Circle()
                                                    .fill(event.type.color)
                                                    .frame(width: 10, height: 10)
                                                Rectangle()
                                                    .fill(Color.gray.opacity(0.5))
                                                    .frame(width: 1, height: 50)
                                            }
                                            .padding(.leading)

                                            Text(event.time, style: .time)
                                                .font(.headline)

                                            VStack(alignment: .leading) {
                                                Text(NSLocalizedString(event.titleKey, comment: ""))
                                                    .fontWeight(.bold)
                                                Text(NSLocalizedString(event.descriptionKey, comment: ""))
                                                    .font(.subheadline)
                                                    .foregroundColor(.gray)
                                            }
                                            .padding(.leading)
                                            Spacer()
                                        }
                                    }
                                }
                            }
                        }
                    }
                } else {
                    // Show an empty state if the profile hasn't been set up yet.
                    VStack {
                        Text("No Profile Found")
                            .font(.title)
                            .fontWeight(.bold)
                        Text("Please set up your profile to see your medication schedule.")
                            .font(.body)
                            .foregroundColor(.gray)
                            .multilineTextAlignment(.center)
                            .padding()
                    }
                }
            }.toolbar(.hidden, for: .navigationBar)
        }
    }
}

// These extensions can remain as they are helpers for UI and data formatting.
extension EventType {
    var color: Color {
        switch self {
        case .medication: return .blue
        case .bloodPressure: return .red
        case .meal: return .orange
        case .exercise: return .green
        }
    }
}

extension SchedulePhase {
    var name: String {
        if let endDate = endDate {
            let formatter = DateIntervalFormatter()
            formatter.dateStyle = .medium
            formatter.timeStyle = .none
            return formatter.string(from: startDate, to: endDate)
        } else {
            return NSLocalizedString("PROFILE_MOVING_FORWARD_LABEL", comment: "")
        }
    }
}

struct MedicationProfileView_Previews: PreviewProvider {
    static var previews: some View {
        let manager = ScheduleManager()
        // To preview the populated view, we need to manually create a profile for the manager.
        manager.profile = MedicationData.createLowDosageMadopar(startDate: Date())
        
        return MedicationProfileView()
            .environmentObject(manager)
    }
}